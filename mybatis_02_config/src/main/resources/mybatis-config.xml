<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
 PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!--
		1、mybatis可以使用properties来引入外部properties配置文件的内容；
		resource: 引入类路径下的资源(com/mybatis/db/dbconf.properties)
		url: 引入网络路径或者磁盘路径下的资源
	  -->
	<properties resource="dbconf.properties"></properties>
	
	<!-- 
		2、settings包含很多重要的设置项
		setting:用来设置每一个设置项
			name：设置项名
			value：设置项取值
		注 : 要使用具体的某项设置可以查询官方文档
	 -->
	<settings>
		<!-- 下划线变成驼峰 -->
		<setting name="mapUnderscoreToCamelCase" value="true"/>	
	</settings>
	
	<!-- typeAliases : 别名处理器 : 可以为java类型起别名; 注 : 别名不区分大小写 -->
	<typeAliases>
		<!-- type: 为某个类起别名; 默认别名 就是employee
			alias : 指定新别名
		-->
		<!-- <typeAlias type="com.mybatis.bean.Employee" alias="Employee"/> -->
		<!-- package : 为某个包下的类批量起别名 
			name : 指定包名(为当前包和后代包下所有的类都起一个默认别名)
		-->
		<package name="com.mybatis.bean"/> 
		<!-- 批量起别名的情况下,使用 @Alias注释为某个类型指定新的别名 -->
		
	</typeAliases>
	
	<!-- environments: mybatais 可以配置多个环境, default指定使用某种环境。可以达到快速切换环境。 -->
	<environments default="dev_mysql">
		<!-- environment : 配置一个具体的环境信息,必须有两个标签,  id代表当前环境的唯一标识 
				transactionManager：事务管理器；
					type：事务管理器的类型;JDBC(JdbcTransactionFactory)|MANAGED(ManagedTransactionFactory)
							自定义事务管理器：实现TransactionFactory接口.type指定为全类名
				dataSource：数据源;
					type:数据源类型;UNPOOLED(UnpooledDataSourceFactory)
								|POOLED(PooledDataSourceFactory)
								|JNDI(JndiDataSourceFactory)
					自定义数据源：实现DataSourceFactory接口，type是全类名
		-->
		<environment id="dev_oracle">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${orcl.driver}" />
				<property name="url" value="${orcl.url}" />
				<property name="username" value="${orcl.username}" />
				<property name="password" value="${orcl.password}" />
			</dataSource>
		</environment>
		
		<environment id="dev_mysql">
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments>
	
	<!-- 5、databaseIdProvider：支持多数据库厂商的；
		 type="DB_VENDOR"：VendorDatabaseIdProvider
		 	作用就是得到数据库厂商的标识(驱动getDatabaseProductName())，mybatis就能根据数据库厂商标识来执行不同的sql;
		 	MySQL，Oracle，SQL Server,xxxx
	  -->
	<databaseIdProvider type="DB_VENDOR">
		<!-- 为不同的数据库厂商起别名 -->
		<property name="MySQL" value="mysql"/>
		<property name="Oracle" value="oracle"/>
		<property name="SQL Server" value="sqlserver"/>
	</databaseIdProvider>
	
	
	<!-- 写好的sql映射文件一定要注册到全局配置中 -->
	<mappers>
		<mapper resource="EmployeeMapper.xml" />
	</mappers>
</configuration>
